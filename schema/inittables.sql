DROP TABLE IF EXISTS Permission;
DROP TABLE IF EXISTS Game;
DROP TABLE IF EXISTS LeaguePlayer;
DROP TABLE IF EXISTS League;
DROP TABLE IF EXISTS Championship;
DROP TABLE IF EXISTS Friendship;
DROP TABLE IF EXISTS UserProfile;
DROP TABLE IF EXISTS Rank;
DROP TABLE IF EXISTS Duration;
DROP TYPE IF EXISTS WinnerType;

CREATE TABLE Duration(
  id SERIAL PRIMARY KEY,
  start_time TIMESTAMP,
  end_time TIMESTAMP
);

CREATE TABLE Rank(
  id SERIAL PRIMARY KEY,
  name CHAR[16]
);

CREATE TABLE UserProfile(
  id SERIAL PRIMARY KEY,
  nick CHAR[16],
  first_name VARCHAR[32],
  last_name VARCHAR[32],
  pwd_hash CHAR[64],
  rank INT REFERENCES Rank(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  registered TIMESTAMP
);

CREATE TABLE Championship(
  id SERIAL PRIMARY KEY,
  name CHAR[16],
  duration INT REFERENCES Duration(id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Friendship(
  id serial PRIMARY KEY,
  user1 INT REFERENCES UserProfile(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  user2 INT REFERENCES UserProfile(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  duration INT REFERENCES Duration(id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TYPE WinnerType AS ENUM ('DRAW', 'P1', 'P2');

CREATE TABLE League(
  id SERIAL PRIMARY KEY,
  name CHAR[16],
  duration INT REFERENCES Championship(id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE LeaguePlayer(
  id SERIAL PRIMARY KEY,
  player INT REFERENCES UserProfile(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  league INT REFERENCES LeaguePlayer(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  elo INT
);

CREATE TABLE Game(
  id SERIAL PRIMARY KEY,
  player1 INT REFERENCES LeaguePlayer(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  player2 INT REFERENCES LeaguePlayer(id) ON UPDATE CASCADE ON DELETE RESTRICT,
  winner WinnerType,
  duration INT REFERENCES Duration(id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Permission(
  id SERIAL PRIMARY KEY,
  name CHAR[16],
  rank INT REFERENCES Rank(id) ON UPDATE CASCADE ON DELETE RESTRICT
);